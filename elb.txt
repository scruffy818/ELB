AWSTemplateFormatVersion: '2010-09-09'
Description: POC Test ELB
Parameters:
  AppServer:
    Description: men
    Type: String
    Default: i-xxxxxxxxxxxx
  VPCID:
    Description: Name of the VPC
    Type: 'AWS::EC2::VPC::Id'
    Default: vpc-xxxxxxxxxxxxxx
    ConstraintDescription: Must be a valid VPC.
#  KeyName:
#    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
#    Type: 'AWS::EC2::KeyPair::KeyName'
#    Default: XXXX
  SubnetIdPublicEastC:
    Description: Private subnet for confidential apps in us-east-1c
    Type: 'AWS::EC2::Subnet::Id'
    Default: subnet-xxxxxxxxxxxxxxxxx
  SubnetIdPublicEastD:
    Description: Private subnet for confidential apps in us-east-1d
    Type: 'AWS::EC2::Subnet::Id'
    Default: subnet-xxxxxxxxxxxxxxxxxxxxx
#  SubnetAvailabilityZone:
#    Description: Availability Zone for subnet
#    Type: String
#    Default: us-east-1c
#    AllowedValues:
#      - us-east-1c
#      - us-east-1d
  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: 'Public subnet for the ELB in us-east-1c and us-east-1d'
    Default: "subnet-xxxxxxxxxxxxx,subnet-xxxxxxxxxxxxxxxx"
  CertARN:
    Type: String
    Default: arn:aws:acm:us-east-1:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


Resources:
  ElbSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: ELB-SG
      VpcId:
        Ref: VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '8034'
          CidrIp: 'xxxxxxxxxxxxxxxx/32'
      Tags:
        - Key: Name
          Value: ELB-SG
  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
#    DependsOn:
#      - ec2instance01
    Properties:
      LoadBalancerName: ELB
      SecurityGroups:
        - Ref: ElbSG
      Subnets: !Ref PublicSubnets
      Scheme: internet-facing
      Instances:
#        - Ref: ec2instance01
        - Ref: AppServer
      Listeners:
        - LoadBalancerPort: '443'
          InstancePort: '80'
          InstanceProtocol: HTTP
          Protocol: HTTPS
          SSLCertificateId: !Ref CertARN 
#	    Ref: CertARN
#      AccessLoggingPolicy:
#        EmitInterval: '60'
#        Enabled: 'False'
#        S3BucketName: elb-logs
#        S3BucketPrefix: ELB
      HealthCheck:
        Target: HTTP:8034/
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '10'
        Timeout: '5'
      ConnectionDrainingPolicy:
        Enabled: true
        Timeout: '60'
      Tags:
        - Key: Name
          Value: OCI-ELB
Outputs:
  ElbDNS:
    Description: ELB DNS
    Value:
      'Fn::GetAtt':
        - ElasticLoadBalancer
        - DNSName
#  AppServerPrivateIP:
#    Description: Private IP address of instance AppServer
#    Value:
#      'Fn::GetAtt':
#        - ec2instance01
#        - PrivateIp
